class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> v;
        map<int,int> m;
        sort(nums.begin(),nums.end()); // sorting the given array
        int n = nums.size();
         // two pointer approach
         
         for(int i=0;i<n-2;i++)
         {
           if(i==0 ||(i>0 && nums[i]!=nums[i-1]))
           {
               int lo = i+1;
               int hi = n-1;
               int sum = 0-nums[i];
               while(lo<hi)
               {
                 if(nums[lo]+nums[hi]==sum)
                 {
                     vector<int> a;
                   a.push_back(nums[i]);
                   a.push_back(nums[lo]);
                   a.push_back(nums[hi]);
                   v.push_back(a);
                   
                 while(lo<hi && nums[lo]==nums[lo+1])lo++;
                 while(lo<hi && nums[hi]==nums[hi-1]) hi--;
                 lo++;
                 hi--;
                 }
                  else if(nums[lo]+nums[hi] < sum) lo++;
                 else hi--;
               }
           }
            
         }
        
         return v;
    }
};